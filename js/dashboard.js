document.addEventListener("DOMContentLoaded", async () => {
    await loadStockData(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    await DashboardCheckRight();
  
    // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ
    setInterval(async () => {
      console.log("üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...");
      await loadStockData();
      await DashboardCheckRight();
    }, 300000); // 300,000 ms = 5 ‡∏ô‡∏≤‡∏ó‡∏µ
  });
  
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï card
  async function loadStockData() {
    try {
      const response = await fetch("/api/get-stock-status2"); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
      const result = await response.json(); // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô JSON
      if (!result.success || !result.data || result.data.length === 0) {
        const container = document.getElementById("cardContainer");
        container.innerHTML = `<div class="col-12 text-center">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>`;
        return;
      }
      updateCardContainer(result.data); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï card ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤
    } catch (error) {
      console.error("‚ö†Ô∏è Error loading stock status:", error);
    }
  }
  
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á card ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
  function updateCardContainer(data) {
    const container = document.getElementById("cardContainer");
    container.innerHTML = ""; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
  
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î mapping ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    const statusColorMapping = {
      "‡∏£‡∏≠‡∏à‡∏±‡∏î": "btn-danger",
      "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î": "btn-pink",       // btn-pink ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î CSS ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå CSS ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
      "‡∏à‡∏±‡∏î‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô": "btn-warning",
      "‡∏à‡∏±‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à": "btn-success",
      "‡∏à‡πà‡∏≤‡∏¢‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô": "btn-info",
      "‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î": "btn-primary"
    };
  
    // Group ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° DI_REF (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å)
    const groupedData = data.reduce((acc, item) => {
      const diRef = item.DI_REF || item.di_ref;
      if (!diRef) return acc;
      if (!acc[diRef]) {
        acc[diRef] = [];
      }
      acc[diRef].push(item);
      return acc;
    }, {});
  
    // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ group ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á card ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ group
    Object.keys(groupedData).forEach(diRef => {
      const group = groupedData[diRef];
      // ‡πÉ‡∏ä‡πâ record ‡πÅ‡∏£‡∏Å‡πÉ‡∏ô group ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
      const first = group[0];
  
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
      let diDate = first.DI_DATE || first.di_date;
      if (diDate) {
        const dateObj = new Date(diDate);
        diDate = dateObj.toLocaleDateString("th-TH");
      } else {
        diDate = '-';
      }
  
      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏à‡∏≤‡∏Å mapping
      const statusText = first.STATUS_NAME || first.status_name || '-';
      const statusClass = statusColorMapping[statusText] || "btn-secondary";
  
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏Ç‡∏≠‡∏á card ‡πÇ‡∏î‡∏¢‡πÅ‡∏™‡∏î‡∏á "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" ‡πÅ‡∏•‡∏∞ "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
      const cardHTML = `
        <div class="card border-left-primary shadow h-100 py-2 mb-3" style="width: 100%;">
          <div class="card-body">
            <!-- ‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢) ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤) -->
            <div class="mb-2 d-flex justify-content-between align-items-center">
              <div>
                <div class="text-xs font-weight-bold text-primary text-uppercase">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</div>
                <div class="h5 mb-0 font-weight-bold text-gray-800">${first.AR_NAME || first.ar_name || '-'}</div>
              </div>
              <div>
                <div class="text-xs font-weight-bold text-primary text-uppercase">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</div>
                <div class="h5 mb-0 font-weight-bold">
                  <span class="btn ${statusClass} btn-sm">${statusText}</span>
                </div>
              </div>
            </div>
            <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô ‡πÜ -->
            <div class="mb-2">
              <div class="text-xs font-weight-bold text-primary text-uppercase">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</div>
              <div class="h5 mb-0 font-weight-bold text-gray-800">${diRef}</div>
            </div>
            <div class="mb-2">
              <div class="text-xs font-weight-bold text-primary text-uppercase">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</div>
              <div class="h5 mb-0 font-weight-bold text-gray-800">${diDate}</div>
            </div>
            <!-- ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô group (‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤) -->
            ${group.length > 1 ? `<hr>
            <div class="mt-2">
              <div class="text-xs font-weight-bold text-secondary text-uppercase">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</div>
              ${group.map(item => `<div>${item.SKU_NAME || '-'}</div>`).join('')}
            </div>` : ''}
          </div>
        </div>
      `;
      container.insertAdjacentHTML("beforeend", cardHTML);
    });
  }
  
  
  
  
  
  
  
  
  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å 1 ‡∏ô‡∏≤‡∏ó‡∏µ (optional)
  function fetchAndUpdateStock() {
    fetch("/api/get-stock-status2")
      .then(response => response.json())
      .then(result => {
        console.log("‚úÖ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API:", result);
        if (result.success && Array.isArray(result.data)) {
          updateCardContainer(result.data);
        }
      })
      .catch(error => console.error("‚ö†Ô∏è Error loading stock status:", error));
  }
  fetchAndUpdateStock();
  setInterval(fetchAndUpdateStock, 60000);
  
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Logout
  document.getElementById('logoutButton').addEventListener('click', function() {
    localStorage.clear();
    window.location.href = '/';
  });
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  window.onload = function() {
    const CheckUser = localStorage.getItem('username');
    if (CheckUser === null || CheckUser.trim() === '') {
      window.location.href = '/';
    }
    document.querySelector("#userDropdown span").textContent = CheckUser;
  };
  
  async function DashboardCheckRight() {
    const rights = localStorage.getItem("user_rights");
    try {
      if (rights === 'user') {
        document.getElementById("Report").hidden = true;
        return;
      }
    } catch (error) {
      console.error("Error:", error);
    }
  }
  DashboardCheckRight();
  